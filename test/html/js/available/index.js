import sinon from 'sinon';
import chai from 'chai';
const expect = chai.expect;
import * as fetch from '../../../../src/functions/fetch.js';
import availableJsFiles from '../../../../src/html/js/available';

describe('html', function() {
  describe('test available promise', function() {
    let sandbox;

    beforeEach(function() {
      sandbox = sinon.sandbox.create();
    });

    afterEach(function() {
      sandbox.restore();
    });

    it('should return only available files', () => {
      sandbox.stub(fetch, 'fetch').callsFake((url) => {
        switch (url) {
          case 'https://example.com/jQuery.js':
          case 'https://example.com/js/subfolder/file.js':
          case 'https://example.com/js/subfolder/file.js?version=1.0.0':
          case'https://example.com/js/subfolder/file.min.js?whatever':
            return {
              response: {
                statusCode: 404,
              },
            };
          default:
            return {
              response: {
                statusCode: 200,
              },
            };
        }
      });

      const javascripts = [
        'https://example.com/jQuery.js',
        'https://example.com/js/somejsfile.js',
        'https://example.com/js/subfolder/file.js',
        'https://example.com/js/subfolder/file.js?v=1.0.0',
        'https://example.com/js/subfolder/file.js?version=1.0.0',
        'https://example.com/js/subfolder/file.js?whatever',
        'https://example.com/js/subfolder/file.min.js?whatever',
      ];

      return new Promise((resolve, reject) => {
          resolve(javascripts);
        })
        .then(availableJsFiles)
        .then((files) => {
          expect(files).to.deep.equal([
            'https://example.com/js/somejsfile.js',
            'https://example.com/js/subfolder/file.js?v=1.0.0',
            'https://example.com/js/subfolder/file.js?whatever',
          ]);
        });
    });
  });
});
