import sinon from 'sinon';
import outcome from '../../src/outcome';
import checkCookies from '../../src/default/checkCookies.js';

describe('test checkCookies', function() {
  let sandbox;

  beforeEach(function() {
    sandbox = sinon.sandbox.create();
    sandbox.stub(outcome, 'error');
  });

  afterEach(function() {
    sandbox.restore();
  });

  it('should log error if cookies are not secure', () => {
    const result = {
      response: {
        headers: {
          'set-cookie': [
            'some-token',
            'another-cookie-text; HttpOnly',
          ],
        },
      },
    };

    checkCookies(result);

    sinon.assert.calledOnce(outcome.error);
  });

  it('should log error if any cookie does not end with secure, HttpOnly', () => {
    const result = {
      response: {
        headers: {
          'set-cookie': [
            'some-token; secure; HttpOnly',
            'another-cookie-text;',
            'whatever; secure; HttpOnly',
          ],
        },
      },
    };

    checkCookies(result);

    sinon.assert.calledOnce(outcome.error);
  });

  it('should not log anything', () => {
    const result = {
      response: {
        headers: {
          'set-cookie': [
            'some-token; secure; HttpOnly',
            'another-cookie-text; secure; HttpOnly',
          ],
        },
      },
    };

    checkCookies(result);

    sinon.assert.notCalled(outcome.error);
  });
});
