import chai from 'chai';
const expect = chai.expect;
import winston from 'winston';
import { TYPE_OK, TYPE_ERROR } from '../../src/pentest/Result';
import XXSSProtection from '../../src/security/XXSSProtection';

describe('test X-XSS-Protection', function() {
  it('correct X-XSS-Protection header', () => {
    const logger = winston.createLogger({
      transports: [ new winston.transports.Console({ level: 'error'}) ]
    });
    const request = {
      get: function(url) {
        return {
          response: {
            headers: {
              'x-xss-protection': '1;mode=block',
            },
          },
        };
      }
    };

    return (new XXSSProtection(request, logger)).execute('https://example.com/').then((result) => {
      expect(result.content).to.equal('https://example.com/');
      expect(result.resultType).to.equal(TYPE_OK);
    });
  });

  it('missing X-XSS-Protection header', () => {
    const logger = winston.createLogger({
      transports: [ new winston.transports.Console({ level: 'error'}) ]
    });
    const request = {
      get: function(url) {
        return {
          response: {
            headers: {},
          },
        };
      }
    };

    return (new XXSSProtection(request, logger)).execute('https://example.com/').then((result) => {
      expect(result.content).to.equal('https://example.com/');
      expect(result.resultType).to.equal(TYPE_ERROR);
    });
  });
});
