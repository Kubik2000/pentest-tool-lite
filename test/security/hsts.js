import chai from 'chai';
const expect = chai.expect;
import winston from 'winston';
import { TYPE_OK, TYPE_INCORRECT, TYPE_ERROR } from '../../src/pentest/Result';
import HSTS from '../../src/security/HSTS';

describe('test HSTS', function() {
  it('correct HSTS header', () => {
    const logger = winston.createLogger({
      transports: [ new winston.transports.Console({ level: 'error'}) ]
    });
    const request = {
      get: function(url) {
        return {
          response: {
            headers: {
              'strict-transport-security': 'max-age=31536000',
            },
          },
        };
      }
    };

    return (new HSTS(request, logger)).execute('https://example.com/').then((result) => {
      expect(result.content).to.equal('https://example.com/');
      expect(result.resultType).to.equal(TYPE_OK);
    });
  });

  it('incorrect HSTS header', () => {
    const logger = winston.createLogger({
      transports: [ new winston.transports.Console({ level: 'error'}) ]
    });
    const request = {
      get: function(url) {
        return {
          response: {
            headers: {
              'strict-transport-security': 'max-age=10368000',
            },
          },
        };
      }
    };

    return (new HSTS(request, logger)).execute('https://example.com/').then((result) => {
      expect(result.content).to.equal('https://example.com/');
      expect(result.resultType).to.equal(TYPE_INCORRECT);
    });
  });

  it('missing HSTS header', () => {
    const logger = winston.createLogger({
      transports: [ new winston.transports.Console({ level: 'error'}) ]
    });
    const request = {
      get: function(url) {
        return {
          response: {
            headers: {},
          },
        };
      }
    };

    return (new HSTS(request, logger)).execute('https://example.com/').then((result) => {
      expect(result.content).to.equal('https://example.com/');
      expect(result.resultType).to.equal(TYPE_ERROR);
    });
  });
});
