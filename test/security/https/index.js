import sinon from 'sinon';
import chai from 'chai';
const expect = chai.expect;
import * as fetch from '../../../src/functions/fetch.js';
import checkCookies from '../../../src/security/https';

describe('security', function() {
  describe('test https promise', function() {
    let sandbox;

    beforeEach(function() {
      sandbox = sinon.sandbox.create();
    });

    afterEach(function() {
      sandbox.restore();
    });

    it('should return original URL even if no https', () => {
      const result = {
        response: {
          headers: {},
        },
      };

      sandbox.stub(fetch, 'fetchWithoutRedirect').returns(result);

      return new Promise((resolve, reject) => {
        resolve('https://www.juffalow.com');
        })
        .then(checkCookies)
        .then((url) => {
          expect(url).to.equal('https://www.juffalow.com');
        });
    });

    it('should return original URL', () => {
      const result = {
        response: {
          headers: {
            'location': 'https://example.com',
          },
          statusCode: 302,
        },
      };

      sandbox.stub(fetch, 'fetchWithoutRedirect').returns(result);

      Promise.resolve('https://www.juffalow.com')
        .then(checkCookies)
        .then((url) => {
          expect(url).to.equal('https://www.juffalow.com');
        });
    });
  });
});
