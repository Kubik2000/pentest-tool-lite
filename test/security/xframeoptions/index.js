import sinon from 'sinon';
import chai from 'chai';
const expect = chai.expect;
import * as fetch from '../../../src/functions/fetch.js';
import checkXFrameOptions from '../../../src/security/xframeoptions';

describe('security', function() {
  describe('test X-Frame-Options promise', function() {
    let sandbox;

    beforeEach(function() {
      sandbox = sinon.sandbox.create();
    });

    afterEach(function() {
      sandbox.restore();
    });

    it('should return array of results, with one result, that contains errors', () => {
      const result = {
        response: {
          headers: {},
        },
      };

      sandbox.stub(fetch, 'fetch').returns(result);

      return checkXFrameOptions('http://juffalow.com/')
        .then((r) => {
          expect(r.messages.length).to.equal(0);
          expect(r.errors.length).to.equal(3);
        });
    });

    it('should return array of results, with one result, that contains messages', () => {
      const result = {
        response: {
          headers: {
            'x-frame-options': 'deny',
          },
        },
      };

      sandbox.stub(fetch, 'fetch').returns(result);

      return checkXFrameOptions('http://juffalow.com/')
        .then((r) => {
          expect(r.messages.length).to.equal(2);
          expect(r.errors.length).to.equal(0);
        });
    });
  });
});
