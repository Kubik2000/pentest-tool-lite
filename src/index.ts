#!/usr/bin/env node

import { Command } from 'commander';
import { version } from '../package.json';
import Factory from './common/Factory';
import config from './config';
import HTML from './html/HTML';
import CommandLine from './report/CommandLine';
import Security from './security/Security';

const program = new Command();

program
  .usage('[options] <URL>')
  .version(version)
  .description(`
    Check your website ( or any other website ) for common vulnerabilities.
  `)
  .option('--grep <tests>', 'only run tests matching tests separated by comma', (value) => value.split(','), [])
  .option('--exclude <tests>', 'exclude tests matching tests separated by comma', (value) => value.split(','), [])
  .option('--no-cache', 'do not use cache for requests', false)
  .option('--logger <level>', 'DEBUG, INFO, VERBOSE, WARNING, ERROR, WTF', 'ERROR')
  .action(async (url, options) => {
    const useConfig = {
      ...config,
      ...{
        exclude: options.exclude,
        grep: options.grep,
        logger: {
          level: options.logger,
        },
        request: {
          cache: {
            type: options.cache ? 'UNLIMITED' : 'BLACK_HOLE',
          },
        },
      },
    };

    const factory = new Factory(useConfig);
    const security = new Security(factory, useConfig);
    const html = new HTML(factory, useConfig);

    const results = [
      await security.run(url),
      await html.run(url),
    ];

    const commandLine = new CommandLine();
    commandLine.write(results);
  });

program.parse(process.argv);
