import Logger from './Logger';

export default class Console implements Logger {

  protected level = 1;

  constructor(level: 'DEBUG' | 'INFO' | 'VERBOSE' | 'WARNING' | 'ERROR') {
    if (level === 'DEBUG') {
      this.level = 1;
    }

    if (level === 'INFO') {
      this.level = 2;
    }

    if (level === 'VERBOSE') {
      this.level = 3;
    }

    if (level === 'WARNING') {
      this.level = 4;
    }

    if (level === 'ERROR') {
      this.level = 5;
    }
  }

  public debug(message: string): void {
    if (this.level < 2) {
      return;
    }
    console.log(message);
  }

  public info(message: string): void {
    if (this.level < 3) {
      return;
    }
    console.log(message);
  }

  public verbose(message: string): void {
    if (this.level < 4) {
      return;
    }
    console.log(message);
  }

  public warning(message: string): void {
    if (this.level < 5) {
      return;
    }
    console.warn(message);
  }

  public error(message: string): void {
    console.error(message);
  }

  /**
   * What a terrible failure
   * @param message
   */
  public wtf(message: string): void {
    console.error(message);
  }
}