import Logger from './Logger';
import config from '../config';

export default class Console implements Logger {
  protected levels = [ 'ALL', 'DEBUG', 'VERBOSE', 'INFO', 'WARNING', 'ERROR', 'NONE' ];

  public debug(message: string): void {
    if (this.levels.indexOf(config.logger.level) > 1) {
      return;
    }
    console.log(message);
  }

  public verbose(message: string): void {
    if (this.levels.indexOf(config.logger.level) > 2) {
      return;
    }
    console.log(message);
  }

  public info(message: string): void {
    if (this.levels.indexOf(config.logger.level) > 3) {
      return;
    }
    console.log(message);
  }

  public warning(message: string): void {
    if (this.levels.indexOf(config.logger.level) > 4) {
      return;
    }
    console.warn(message);
  }

  public error(message: string): void {
    if (this.levels.indexOf(config.logger.level) > 5) {
      return;
    }
    console.error(message);
  }

  /**
   * What a terrible failure
   * @param message
   */
  public wtf(message: string): void {
    console.error(message);
  }
}
