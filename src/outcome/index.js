import winston from 'winston';

class Outcome {
  constructor() {
    this.messages = [];
  }

  addMessage(message) {
    this.messages.push(message);
  }

  newMessage(type, text) {
    this.messages.push({ type: type, text: text });
  }

  info(text) {
    this.messages.push({type: 'info', text: text});
  }

  warning(text) {
    this.messages.push({type: 'warning', text: text});
  }

  error(text) {
    this.messages.push({type: 'error', text: text});
  }

  print() {
    winston.info('Outcome.print()');
    for( let i = 0; i < this.messages.length; i++ ) {
      this.printMessage(this.messages[i]);
    }
  }

  printMessage(message) {
    if( message.type === 'info' ) {
      winston.info(message.text);
    } else if( message.type === 'warning' ) {
      winston.warn(message.text);
    } else if( message.type === 'error' ) {
      winston.error(message.text);
    }
  }
}

export default new Outcome();
