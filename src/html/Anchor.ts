import { getAnchors, parseHtml } from '../functions';
import Test from '../Test';

class Anchor extends Test {
  protected request: IRequest;

  protected logger: ILogger;

  constructor(request: IRequest, logger: ILogger) {
    super();
    this.request = request;
    this.logger = logger;
  }

  public async run(url: string): Promise<IResult> {
    this.logger.info('Starting Anchor test...');
    const result = await this.request.get(url);
    const parsedHtml = await parseHtml(result);
    const anchors = getAnchors(parsedHtml);
    const subChecks = await Promise.all(anchors.map(async (anchor) => await this.checkAnchor(anchor)));

    return this.getResult('Image', this.getStatus(subChecks), subChecks);
  }

  protected async checkAnchor(url: string): Promise<IResult> {
    this.logger.debug(`Checking ${url}...`);

    const result = await this.request.get(url);

    const isAvailable = this.isUrlAvailable(result);

    const subChecks = [
      this.getResult('Available', isAvailable ? 'SUCCESSFUL' : 'ERROR'),
    ];

    return this.getResult(url, this.getStatus(subChecks), subChecks);
  }

  protected isUrlAvailable(result: any): boolean {
    if (result.response.statusCode === 404 || result.response.statusCode === 500) {
      return false;
    }
    return true;
  }
}

export default Anchor;
