import { fetch } from './fetch.js';
import winston from 'winston';

/**
 * The URL can be in format:
 * - http://something.com
 * - http://something.com/
 * - https://something.com
 * - https://something.com/
 * - http://something.com/something
 * - http://something.com/something/
 * - https://something.com/something
 * - https://something.com/something/
 * - something.com
 * - something.com/
 * - something.com/something
 * - something.com/something/
 * etc.
 *
 * So it needs to do a "preflight" request on the specified URL, which should
 * return a redirect if it is not in correct format. Then the process should
 * continue with this new URL.
 */

export default function(url) {
  if (!url.startsWith('http://') || !url.startsWith('https://')) {
    url = 'http://' + url;
    winston.verbose('URL was missing the protocol, changed to:', url);
  }
  return Promise.resolve(url)
    .then(fetch)
    .then((http) => {
      if (http.error !== null) {
        throw http.error;
      }
      if (http.response.request.uri.href !== url) {
        winston.verbose('Correct URL based on server response:', http.response.request.uri.href);
        return http.response.request.uri.href;
      }
      return url;
    });
};
